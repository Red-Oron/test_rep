Index: board.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nfrom random import randint\r\n\r\n\r\nclass Board:\r\n    def __init__(self):\r\n        self.width = 16\r\n        self.height = 9\r\n        self.size = 100\r\n        self.board = self.generate()\r\n        self.lily = pygame.image.load('objects/lily.png')\r\n        self.lily = pygame.transform.scale(self.lily, (self.size, self.size))\r\n\r\n    def draw(self, screen):\r\n        for i in range(self.height):\r\n            for j in range(self.width):\r\n                if self.board[i][j] == 1:\r\n                    screen.blit(self.lily,(self.size*j, self.size*i))\r\n\r\n    def generate(self):\r\n        return [list(map(int, ['3', '3', '3'] + list(i)[:-1] + ['3', '3', '3'])) for i in open(f'levels/level_{randint(1, 7)}.txt').readlines()]\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/board.py b/board.py
--- a/board.py	(revision d24bb34279af5de646fbbce5109a6e440eadb43f)
+++ b/board.py	(date 1713007261666)
@@ -18,5 +18,5 @@
                     screen.blit(self.lily,(self.size*j, self.size*i))
 
     def generate(self):
-        return [list(map(int, ['3', '3', '3'] + list(i)[:-1] + ['3', '3', '3'])) for i in open(f'levels/level_{randint(1, 7)}.txt').readlines()]
+        return [list(map(int, ['3', '3', '3'] + list(i)[:-1] + ['2', '2', '2'])) for i in open(f'levels/level_{randint(1, 7)}.txt').readlines()]
 
Index: player.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\n\r\n\r\nclass Player:\r\n\r\n    def __init__(self):\r\n\r\n        self.health = 6\r\n\r\n        self.cordX = 0\r\n        self.cordY = 4\r\n\r\n        self.hight = 9\r\n        self.width = 16\r\n\r\n        self.movingX = 0\r\n        self.movingY = 4\r\n\r\n        self.finish = False\r\n\r\n        self.sizeX = 100\r\n        self.sizeY = 200\r\n\r\n        self.screen_width = 1600\r\n        self.screen_hight = 900\r\n\r\n        self.cell_size = self.screen_width / self.width\r\n        self.realcordX = 100 * self.cordX + 50\r\n        self.realcordY = 100 * self.cordY + 25\r\n\r\n        # self.player_image = pygame.image.load('player_image/playe2r.png')\r\n        self.player_image = pygame.transform.scale(pygame.image.load('player_image/playe2r.png'), (100, 135))\r\n        self.player_rect = self.player_image.get_rect(center=(self.realcordX, self.realcordY))\r\n\r\n    def death(self):\r\n        if self.health == 0:\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    def move(self, event, mass):\r\n        if event.type == pygame.KEYDOWN:\r\n            if event.key == pygame.K_d:\r\n                self.movingX += 1\r\n                self.location(mass)\r\n            elif event.key == pygame.K_a:\r\n                self.movingX -= 1\r\n                self.location(mass)\r\n            elif event.key == pygame.K_w:\r\n                self.movingY -= 1\r\n                self.location(mass)\r\n            elif event.key == pygame.K_s:\r\n                self.movingY += 1\r\n                self.location(mass)\r\n\r\n\r\n    def location(self, mass):\r\n\r\n        if 0 <= self.movingX < self.width and 0 <= self.movingY < self.hight:\r\n            print(self.movingX, self.movingY)\r\n            if mass[self.movingY][self.movingX] == 0:\r\n                self.health -= 1\r\n                self.movingX = self.cordX\r\n                self.movingY = self.cordY\r\n            else:\r\n                self.cordX = self.movingX\r\n                self.cordY = self.movingY\r\n                if mass[self.cordY][self.cordX] == 2: self.Finish = True\r\n\r\n    def draw(self, screen):\r\n        self.realcordX = 100 * self.cordX + 50\r\n        self.realcordY = 100 * self.cordY + 25\r\n        self.player_rect = self.player_image.get_rect(center=(self.realcordX, self.realcordY))\r\n        screen.blit(self.player_image, self.player_rect)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/player.py b/player.py
--- a/player.py	(revision d24bb34279af5de646fbbce5109a6e440eadb43f)
+++ b/player.py	(date 1713008023509)
@@ -72,3 +72,4 @@
         self.realcordY = 100 * self.cordY + 25
         self.player_rect = self.player_image.get_rect(center=(self.realcordX, self.realcordY))
         screen.blit(self.player_image, self.player_rect)
+
